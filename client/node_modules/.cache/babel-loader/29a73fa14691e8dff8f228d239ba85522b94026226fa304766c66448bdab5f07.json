{"ast":null,"code":"var _jsxFileName = \"E:\\\\Employee Management\\\\client\\\\src\\\\context\\\\EmployeeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// context/EmployeeContext.js\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport api from '../services/api';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeContext = /*#__PURE__*/createContext();\n\n// Initial state\nconst initialState = {\n  employees: [],\n  loading: false,\n  error: null\n};\n\n// Reducer function\nfunction employeeReducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        employees: action.payload\n      };\n    case 'FETCH_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case 'ADD_EMPLOYEE':\n      return {\n        ...state,\n        employees: [...state.employees, action.payload]\n      };\n    case 'UPDATE_EMPLOYEE':\n      return {\n        ...state,\n        employees: state.employees.map(emp => emp.id === action.payload.id ? action.payload : emp)\n      };\n    case 'DELETE_EMPLOYEE':\n      return {\n        ...state,\n        employees: state.employees.filter(emp => emp.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n\n// Provider component\nexport const EmployeeProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(employeeReducer, initialState);\n\n  // Fetch employees on initial load\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      dispatch({\n        type: 'FETCH_REQUEST'\n      });\n      try {\n        const response = await api.get('/employees');\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: response.data\n        });\n      } catch (error) {\n        dispatch({\n          type: 'FETCH_ERROR',\n          payload: 'Failed to fetch employees'\n        });\n      }\n    };\n    fetchEmployees();\n  }, []);\n\n  // Actions\n  const addEmployee = async employee => {\n    try {\n      const response = await api.post('/employees', employee);\n      dispatch({\n        type: 'ADD_EMPLOYEE',\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to add employee');\n    }\n  };\n  const updateEmployee = async (id, employee) => {\n    try {\n      const response = await api.put(`/employees/${id}`, employee);\n      dispatch({\n        type: 'UPDATE_EMPLOYEE',\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      throw new Error('Failed to update employee');\n    }\n  };\n  const deleteEmployee = async id => {\n    try {\n      await api.delete(`/employees/${id}`);\n      dispatch({\n        type: 'DELETE_EMPLOYEE',\n        payload: id\n      });\n    } catch (error) {\n      throw new Error('Failed to delete employee');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(EmployeeContext.Provider, {\n    value: {\n      ...state,\n      addEmployee,\n      updateEmployee,\n      deleteEmployee\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for using the context\n_s(EmployeeProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = EmployeeProvider;\nexport const useEmployees = () => {\n  _s2();\n  const context = useContext(EmployeeContext);\n  if (!context) {\n    throw new Error('useEmployees must be used within an EmployeeProvider');\n  }\n  return context;\n};\n_s2(useEmployees, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"EmployeeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","api","jsxDEV","_jsxDEV","EmployeeContext","initialState","employees","loading","error","employeeReducer","state","action","type","payload","map","emp","id","filter","EmployeeProvider","children","_s","dispatch","fetchEmployees","response","get","data","addEmployee","employee","post","Error","updateEmployee","put","deleteEmployee","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useEmployees","_s2","context","$RefreshReg$"],"sources":["E:/Employee Management/client/src/context/EmployeeContext.js"],"sourcesContent":["// context/EmployeeContext.js\r\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\n// Create context\r\nconst EmployeeContext = createContext();\r\n\r\n// Initial state\r\nconst initialState = {\r\n  employees: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\n// Reducer function\r\nfunction employeeReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true, error: null };\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, loading: false, employees: action.payload };\r\n    case 'FETCH_ERROR':\r\n      return { ...state, loading: false, error: action.payload };\r\n    case 'ADD_EMPLOYEE':\r\n      return { ...state, employees: [...state.employees, action.payload] };\r\n    case 'UPDATE_EMPLOYEE':\r\n      return {\r\n        ...state,\r\n        employees: state.employees.map(emp => \r\n          emp.id === action.payload.id ? action.payload : emp\r\n        )\r\n      };\r\n    case 'DELETE_EMPLOYEE':\r\n      return {\r\n        ...state,\r\n        employees: state.employees.filter(emp => emp.id !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Provider component\r\nexport const EmployeeProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(employeeReducer, initialState);\r\n\r\n  // Fetch employees on initial load\r\n  useEffect(() => {\r\n    const fetchEmployees = async () => {\r\n      dispatch({ type: 'FETCH_REQUEST' });\r\n      try {\r\n        const response = await api.get('/employees');\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: response.data });\r\n      } catch (error) {\r\n        dispatch({ type: 'FETCH_ERROR', payload: 'Failed to fetch employees' });\r\n      }\r\n    };\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  // Actions\r\n  const addEmployee = async (employee) => {\r\n    try {\r\n      const response = await api.post('/employees', employee);\r\n      dispatch({ type: 'ADD_EMPLOYEE', payload: response.data });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Failed to add employee');\r\n    }\r\n  };\r\n\r\n  const updateEmployee = async (id, employee) => {\r\n    try {\r\n      const response = await api.put(`/employees/${id}`, employee);\r\n      dispatch({ type: 'UPDATE_EMPLOYEE', payload: response.data });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Failed to update employee');\r\n    }\r\n  };\r\n\r\n  const deleteEmployee = async (id) => {\r\n    try {\r\n      await api.delete(`/employees/${id}`);\r\n      dispatch({ type: 'DELETE_EMPLOYEE', payload: id });\r\n    } catch (error) {\r\n      throw new Error('Failed to delete employee');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <EmployeeContext.Provider value={{ \r\n      ...state, \r\n      addEmployee, \r\n      updateEmployee, \r\n      deleteEmployee \r\n    }}>\r\n      {children}\r\n    </EmployeeContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using the context\r\nexport const useEmployees = () => {\r\n  const context = useContext(EmployeeContext);\r\n  if (!context) {\r\n    throw new Error('useEmployees must be used within an EmployeeProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}